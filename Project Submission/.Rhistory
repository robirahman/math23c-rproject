values <- values[values[,2] == 0,]
hist(values[,1], main=name)
}
soybeans_regression <- glm(recession_bool ~ Soybeans, data = price_changes, family = 'binomial')
summary(soybeans_regression)
plot(price_changes$Soybeans, price_changes$recession_bool)
gold_regression <- glm(recession_bool ~ Gold, data = price_changes, family = 'binomial')
summary(gold_regression)
plot(price_changes$Gold, price_changes$recession_bool)
goods_vs_recession_logistic_model <- glm(
recession_bool ~ Crude_oil + Sugar + Soybeans + Wheat + Beef + Rubber + Cocoa_beans + Gold + USD_EUR + Ice_cream,
data = price_changes, family = 'binomial')
summary(goods_vs_recession_logistic_model)
negative_goods_regression <- glm(recession_bool ~ Crude_oil + Wheat + Rubber + Ice_cream, data = price_changes, family = 'binomial')
summary(negative_goods_regression)
# Probability of a recession if all of these goods lost 100% of their value this month:
inv.logit(-1.6582+0.2640+0.7643+0.8586+1.5616)
# Probability of a recession if all of these goods doubled in price last month:
inv.logit(-1.6582-0.2640-0.7643-0.8586-1.5616)
icecream_regression <- glm(recession_bool ~ Ice_cream, data = price_changes, family = 'binomial')
summary(icecream_regression)
plot(price_changes$Ice_cream, price_changes$recession_bool)
curve(inv.logit(-1.5900*x-1.6687), add=TRUE)
icecream_predictions <- as.factor(predict(icecream_regression, newdata=price_changes, type='response') > inv.logit(-1.6687))
confusionMatrix(icecream_predictions, reference = as.factor(price_changes$recession_bool==1))
recession_predictions <- as.factor(predict(goods_vs_recession_logistic_model, newdata=price_changes, type='response') > inv.logit(-1.7006))
confusionMatrix(recession_predictions, reference = as.factor(price_changes$recession_bool==1))
View(commodity_prices)
View(price_changes)
View(price_changes)
View(price_changes)
knitr::opts_chunk$set(echo = TRUE)
library(eeptools) # to import the decomma() function
library(boot)
library(caret)
library(psych)
pairs.panels(price_changes[,2:13])
pairs.panels(price_changes[,2:13])
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (r in 2:241) {
for (c in 2:11) {
change_vs_recession$change[r-1+240*(c-1)] <- price_changes[r,c]
}
}
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (r in 2:241) {
for (c in 2:11) {
change_vs_recession$change[r+240*(c-1)] <- price_changes[r,c]
}
}
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2402),recession_bool=rep(price_changes$recession_bool,10))
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (r in 2:241) {
for (c in 2:11) {
change_vs_recession$change[r+240*(c-1)] <- price_changes[r,c]
}
}
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (r in 2:241) {
for (c in 2:11) {
change_vs_recession[r+240*(c-1),1] <- price_changes[r,c]
}
}
# price_changes_in_recession <- c()
# price_changes_no_recession <- c()
View(change_vs_recession)
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (r in 2:241) {
for (c in 2:11) {
change_vs_recession[r+240*(c-2),1] <- price_changes[r,c]
}
}
# price_changes_in_recession <- c()
# price_changes_no_recession <- c()
View(change_vs_recession)
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (r in 2:241) {
for (c in 2:11) {
change_vs_recession[r-1+240*(c-2),1] <- price_changes[r,c]
}
}
# price_changes_in_recession <- c()
# price_changes_no_recession <- c()
View(change_vs_recession)
View(price_changes)
View(price_changes)
View(price_changes)
View(change_vs_recession)
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (c in 2:11) {
for (r in 2:241) {
change_vs_recession[r-1+240*(c-2),1] <- price_changes[r,c]
}
}
# price_changes_in_recession <- c()
# price_changes_no_recession <- c()
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (c in 2:11) {
for (r in 2:241) {
change_vs_recession[r-1+240*(c-2),1] <- price_changes[r-1,c]
}
}
# price_changes_in_recession <- c()
# price_changes_no_recession <- c()
table(change_vs_recession)
table(change_vs_recession$change >= 0, change_vs_recession$recession_bool)
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (c in 2:11) {
for (r in 2:241) {
change_vs_recession[r-1+240*(c-2),1] <- price_changes[r-1,c]
}
}
hist(change_vs_recession$change)
table(change_vs_recession$change >= 0, change_vs_recession$recession_bool)
# price_changes_in_recession <- c()
# price_changes_no_recession <- c()
212/(212+168)
1130/(1130+890)
212/(212+168)
1130/(1130+890)
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (c in 2:11) {
for (r in 2:241) {
change_vs_recession[r-1+240*(c-2),1] <- price_changes[r-1,c]
}
}
hist(change_vs_recession$change)
table(change_vs_recession$change >= 0, change_vs_recession$recession_bool)
# During recessions: price diff >= 0 212 times; price diff < 0 168 times
# During other times: price diff >= 0 1130 times; price diff < 0 890 times
212/(212+168)
1130/(1130+890)
# price_changes_in_recession <- c()
# price_changes_no_recession <- c()
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (c in 2:11) {
for (r in 2:241) {
change_vs_recession[r-1+240*(c-2),1] <- price_changes[r-1,c]
}
}
hist(change_vs_recession$change)
table(change_vs_recession$change >= 0, change_vs_recession$recession_bool)
# During recessions: price diff >= 0 212 times; price diff < 0 168 times
# During other times: price diff >= 0 1130 times; price diff < 0 890 times
212/(212+168) # Price goes up 55.8% of the time during recessions
1130/(1130+890) # Price goes up 55.9% of the time without recession
# price_changes_in_recession <- c()
# price_changes_no_recession <- c()
knitr::opts_chunk$set(echo = TRUE)
library(eeptools) # to import the decomma() function
library(boot)
library(caret)
library(psych)
library(ggplot2)
# Loading the cleaned data
price_changes <- read.csv("price changes.csv")
setwd("~/GitHub/math23c-rproject/Project Submission")
# Loading the cleaned data
price_changes <- read.csv("price changes.csv")
# Loading the cleaned data
price_changes <- read.csv("price changes.csv")
# Let's use ice cream for this example, since all the goods fare so poorly.
icecream_regression <- glm(recession_bool ~ Ice_cream, data = price_changes, family = 'binomial')
# Logistic model of recession probability based on price change of ice cream:
summary(icecream_regression)
plot(price_changes$Ice_cream, price_changes$recession_bool, col=c("red","blue"),
xlab="Monthly price change of ice cream", ylab="Recession indicator",
main="Ice cream price changes in non-recession and recession periods")
curve(inv.logit(-1.5900*x-1.6687), add=TRUE)
icecream_predictions <- as.factor(predict(icecream_regression, newdata=price_changes, type='response') > inv.logit(-1.6687))
confusionMatrix(icecream_predictions, reference = as.factor(price_changes$recession_bool==1))
recession_predictions <- as.factor(predict(goods_vs_recession_logistic_model, newdata=price_changes, type='response') > inv.logit(-1.7006))
confusionMatrix(recession_predictions, reference = as.factor(price_changes$recession_bool==1))
# Loading the cleaned data
price_changes <- read.csv("price changes.csv")
# Let's use ice cream for this example, since all the goods fare so poorly.
icecream_regression <- glm(recession_bool ~ Ice_cream, data = price_changes, family = 'binomial')
# Logistic model of recession probability based on price change of ice cream:
summary(icecream_regression)
plot(price_changes$Ice_cream, price_changes$recession_bool, col=c("blue"),
xlab="Monthly price change of ice cream", ylab="Recession indicator",
main="Ice cream price changes in non-recession and recession periods")
curve(inv.logit(-1.5900*x-1.6687), add=TRUE)
icecream_predictions <- as.factor(predict(icecream_regression, newdata=price_changes, type='response') > inv.logit(-1.6687))
confusionMatrix(icecream_predictions, reference = as.factor(price_changes$recession_bool==1))
recession_predictions <- as.factor(predict(goods_vs_recession_logistic_model, newdata=price_changes, type='response') > inv.logit(-1.7006))
confusionMatrix(recession_predictions, reference = as.factor(price_changes$recession_bool==1))
# Loading the cleaned data
price_changes <- read.csv("price changes.csv")
# Let's use ice cream for this example, since all the goods fare so poorly.
icecream_regression <- glm(recession_bool ~ Ice_cream, data = price_changes, family = 'binomial')
# Logistic model of recession probability based on price change of ice cream:
summary(icecream_regression)
plot(price_changes$Ice_cream, price_changes$recession_bool, col=c("blue"),
xlab="Monthly price change of ice cream", ylab="Recession indicator",
main="Ice cream price changes in non-recession and recession periods")
curve(inv.logit(-1.5900*x-1.6687), add=TRUE)
# You can see that the prediction only ranges from 20% probability that a recession
# is happening in a month when the price of ice cream crashes by 15%, compared to
# a 15% chance that there is currently a recession while the price of ice cream
# is soaring by 15%.
icecream_predictions <- as.factor(predict(icecream_regression, newdata=price_changes, type='response') > inv.logit(-1.6687))
confusionMatrix(icecream_predictions, reference = as.factor(price_changes$recession_bool==1))
202/240
# It looks like there's not much of a correlation between recessions and positive
# vs negative price changes of goods. Let's investigate using a contingency table.
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (c in 2:11) {
for (r in 2:241) {
change_vs_recession[r-1+240*(c-2),1] <- price_changes[r-1,c]
}
}
hist(change_vs_recession$change, col="lightblue", main="Frequency of price changes (all goods, 2001-21)")
table(change_vs_recession$change >= 0, change_vs_recession$recession_bool)
# During recessions: price diff >= 0 212 times; price diff < 0 168 times
# During other times: price diff >= 0 1130 times; price diff < 0 890 times
212/(212+168) # Price goes up 55.8% of the time during recessions
1130/(1130+890) # Price goes up 55.9% of the time without recession
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (c in 2:11) {
for (r in 2:241) {
change_vs_recession[r-1+240*(c-2),1] <- price_changes[r-1,c]
}
}
hist(change_vs_recession$change, col="lightblue", main="Frequency of price changes (all goods, 2001-21)")
table(change_vs_recession$change >= 0, change_vs_recession$recession_bool)
hist(change_vs_recession$change, col="lightblue", main="Frequency of price changes (all goods, 2001-21)")
View(change_vs_recession)
View(price_changes)
View(price_changes)
# Loading the cleaned data
price_changes <- read.csv("price changes.csv")[,2:15]
# It looks like there's not much of a correlation between recessions and positive
# vs negative price changes of goods. Let's investigate using a contingency table.
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (c in 2:11) {
for (r in 2:241) {
change_vs_recession[r-1+240*(c-2),1] <- price_changes[r-1,c]
}
}
hist(change_vs_recession$change, col="lightblue", main="Frequency of price changes (all goods, 2001-21)")
table(change_vs_recession$change >= 0, change_vs_recession$recession_bool)
# During recessions: price diff >= 0 212 times; price diff < 0 168 times
# During other times: price diff >= 0 1130 times; price diff < 0 890 times
212/(212+168) # Price goes up 55.8% of the time during recessions
1130/(1130+890) # Price goes up 55.9% of the time without recession
write.csv(change_vs_recession, "cvr1.csv")
# Repeat the above analysis, but break up the recession category into three.
change_vs_recession <- data.frame(change=numeric(2400),which_recession=rep(price_changes$which_recession,10))
for (c in 2:11) {
for (r in 2:241) {
change_vs_recession[r-1+240*(c-2),1] <- price_changes[r-1,c]
}
}
table(change_vs_recession$change >= 0, change_vs_recession$which_recession)
1130/(890+1130) # Prices increased 55.9% of the time outside of recessions
38/(38+42) # # Prices increased 47.5% of the time during the dotcom recession
101/(101+79) # Prices increased 56.1% of the time during the housing crisis
73/(73+47) # Prices increased 60.8% of the time during the COVID pandemic
write.csv(change_vs_recession, "cvr2.csv")
change_vs_recession <- read.csv("cvr1.csv")
hist(change_vs_recession$change, col="lightblue", main="Frequency of price changes (all goods, 2001-21)")
table(change_vs_recession$change >= 0, change_vs_recession$recession_bool)
# During recessions: price diff >= 0 212 times; price diff < 0 168 times
# During other times: price diff >= 0 1130 times; price diff < 0 890 times
212/(212+168) # Price goes up 55.8% of the time during recessions
1130/(1130+890) # Price goes up 55.9% of the time without recession
# Repeat the above analysis, but break up the recession category into three.
change_vs_recession <- read.csv("cvr2.csv")
table(change_vs_recession$change >= 0, change_vs_recession$which_recession)
1130/(890+1130) # Prices increased 55.9% of the time outside of recessions
38/(38+42) # # Prices increased 47.5% of the time during the dotcom recession
101/(101+79) # Prices increased 56.1% of the time during the housing crisis
73/(73+47) # Prices increased 60.8% of the time during the COVID pandemic
df <- tibble::tribble(
~x, ~y, ~price,
"non-recession", 1130,  "same/increased",
"non-recession", -890,  "decreased",
"recession", 212,  "same/increased",
"recession", -168,  "decreased",
)
ggplot(data = df, aes(x, y, group = price)) +
geom_col(aes(fill = price), position = position_stack(reverse = TRUE)) +
geom_hline(yintercept = 0) +
xlab("") + ylab("") + ggtitle("Likelihood of price increases vs recession")
df <- tibble::tribble(
~x, ~y, ~price,
"dotcom crash", 38,"same/increased",
"dotcom crash", -42,  "decreased",
"financial crisis", 101,"same/increased",
"financial crisis", -79,  "decreased",
"COVID pandemic", 73,"same/increased",
"COVID pandemic", -47,  "decreased",
)
ggplot(data = df, aes(x, y, group = price)) +
geom_col(aes(fill = price), position = position_stack(reverse = TRUE)) +
geom_hline(yintercept = 0) +
xlab("") + ylab("") + ggtitle("Likelihood of price increases vs recession")
df <- tibble::tribble(
~x, ~y, ~price,
"non-recession", 1130,  "same/increased",
"non-recession", -890,  "decreased",
"recession", 212,  "same/increased",
"recession", -168,  "decreased",
)
ggplot(data = df, aes(x, y, group = price)) +
geom_col(aes(fill = price), position = position_stack(reverse = TRUE)) +
geom_hline(yintercept = 0) +
xlab("") + ylab("") + ggtitle("Likelihood of price increases vs recession")
df <- tibble::tribble(
~x, ~y, ~price,
"dotcom crash", 38,"same/increased",
"dotcom crash", -42,  "decreased",
"financial crisis", 101,"same/increased",
"financial crisis", -79,  "decreased",
"COVID pandemic", 73,"same/increased",
"COVID pandemic", -47,  "decreased",
)
ggplot(data = df, aes(x, y, group = price)) +
geom_col(aes(fill = price), position = position_stack(reverse = TRUE)) +
geom_hline(yintercept = 0) +
xlab("") + ylab("") + ggtitle("Likelihood of price increases vs recession")
# Make a graphical display to see if any commodities are correlated to each other.
pairs.panels(price_changes[,2:13])
# Make a graphical display to see if any commodities are correlated to each other.
pairs.panels(price_changes[,c(2:9,11)])
# Looks like nothing is correlated to anything else except for R=0.45 between
# soybeans and wheat. Maybe we can compare some commodities to the recession
# indicator, the Euro exchange rate, and unemployment.
pairs.panels(price_changes[,7:13])
# Looks like nothing is correlated to anything else except for R=0.45 between
# soybeans and wheat. Maybe we can compare some commodities to the recession
# indicator, the Euro exchange rate, and unemployment.
pairs.panels(price_changes[,8:13])
View(price_changes)
set.seed(2021)
unemployment_vs_recession <- price_changes[,12:13]
total_recession <- sum(unemployment_vs_recession[,2]) # 38
total_nonrecession <- 240-total_recession # 202
indicator <- function(x) x == 1
not_indicator <- function(x) x == 0
avg_unemp_in_recession <- sum(unemployment_vs_recession[,1]*indicator(unemployment_vs_recession[,2]))/38
avg_unemp_not_recession <- sum(unemployment_vs_recession[,1]*not_indicator(unemployment_vs_recession[,2]))/202
observed_difference <- avg_unemp_in_recession - avg_unemp_not_recession
diffs <- numeric(1000)
for (i in 1:1000) {
unemps <- sample(unemployment_vs_recession[,1])
recession_avg <- sum(unemps*indicator(unemployment_vs_recession[,2]))/38
nonrecession_avg <- sum(unemps*not_indicator(unemployment_vs_recession[,2]))/202
diffs[i] <- recession_avg - nonrecession_avg
}
hist(diffs, col="lightblue", main="Shuffled differences in unemployment")
abline(v=observed_difference, col="red")
pvalue <- sum(diffs > observed_difference)/1000
# p-value = 0.004, so there is a significant difference in unemployment during
#                  recessions and non-recession periods!
set.seed(2021)
unemployment_vs_recession <- price_changes[,12:13]
total_recession <- sum(unemployment_vs_recession[,2]) # 38
total_nonrecession <- 240-total_recession # 202
indicator <- function(x) x == 1
not_indicator <- function(x) x == 0
avg_unemp_in_recession <- sum(unemployment_vs_recession[,1]*indicator(unemployment_vs_recession[,2]))/38
avg_unemp_not_recession <- sum(unemployment_vs_recession[,1]*not_indicator(unemployment_vs_recession[,2]))/202
observed_difference <- avg_unemp_in_recession - avg_unemp_not_recession
diffs <- numeric(1000)
for (i in 1:1000) {
unemps <- sample(unemployment_vs_recession[,1])
recession_avg <- sum(unemps*indicator(unemployment_vs_recession[,2]))/38
nonrecession_avg <- sum(unemps*not_indicator(unemployment_vs_recession[,2]))/202
diffs[i] <- recession_avg - nonrecession_avg
}
hist(diffs, col="lightblue", main="Shuffled differences in unemployment")
abline(v=observed_difference, col="red")
pvalue <- sum(diffs > observed_difference)/1000
# p-value = 0.004, so there is a significant difference in unemployment during
#                  recessions and non-recession periods!
set.seed(2021)
unemployment_vs_recession <- price_changes[,12:13]
total_recession <- sum(unemployment_vs_recession[,2]) # 38
total_nonrecession <- 240-total_recession # 202
indicator <- function(x) x == 1
not_indicator <- function(x) x == 0
avg_unemp_in_recession <- sum(unemployment_vs_recession[,1]*indicator(unemployment_vs_recession[,2]))/38
avg_unemp_not_recession <- sum(unemployment_vs_recession[,1]*not_indicator(unemployment_vs_recession[,2]))/202
observed_difference <- avg_unemp_in_recession - avg_unemp_not_recession
diffs <- numeric(1000)
for (i in 1:1000) {
unemps <- sample(unemployment_vs_recession[,1])
recession_avg <- sum(unemps*indicator(unemployment_vs_recession[,2]))/38
nonrecession_avg <- sum(unemps*not_indicator(unemployment_vs_recession[,2]))/202
diffs[i] <- recession_avg - nonrecession_avg
}
hist(diffs, col="lightblue", main="Shuffled differences in unemployment")
abline(v=observed_difference, col="red")
pvalue <- sum(diffs > observed_difference)/1000
# p-value = 0.004, so there is a significant difference in unemployment during
#                  recessions and non-recession periods!
set.seed(2021)
unemployment_vs_recession <- price_changes[,12:13]
total_recession <- sum(unemployment_vs_recession[,2]) # 38
total_nonrecession <- 240-total_recession # 202
indicator <- function(x) x == 1
not_indicator <- function(x) x == 0
avg_unemp_in_recession <- sum(unemployment_vs_recession[,1]*indicator(unemployment_vs_recession[,2]))/38
avg_unemp_not_recession <- sum(unemployment_vs_recession[,1]*not_indicator(unemployment_vs_recession[,2]))/202
observed_difference <- avg_unemp_in_recession - avg_unemp_not_recession
diffs <- numeric(1000)
for (i in 1:1000) {
unemps <- sample(unemployment_vs_recession[,1])
recession_avg <- sum(unemps*indicator(unemployment_vs_recession[,2]))/38
nonrecession_avg <- sum(unemps*not_indicator(unemployment_vs_recession[,2]))/202
diffs[i] <- recession_avg - nonrecession_avg
}
pvalue <- sum(diffs > observed_difference)/1000
hist(diffs, col="lightblue", main="Shuffled differences in unemployment")
abline(v=observed_difference, col="red")
pvalue
# p-value = 0.004, so there is a significant difference in unemployment during
#                  recessions and non-recession periods!
set.seed(2022)
recession_unemployment_rates <- unemployment_vs_recession$Unemployment[unemployment_vs_recession$recession_bool==1]
nonrecession_unemployment_rates <- unemployment_vs_recession$Unemployment[unemployment_vs_recession$recession_bool==0]
rur <- mean(recession_unemployment_rates)
nur <- mean(nonrecession_unemployment_rates)
rsd <- sd(recession_unemployment_rates)
nsd <- sd(nonrecession_unemployment_rates)
recession_samples <- sample(recession_unemployment_rates,size=16,replace=TRUE)
nonrecession_samples <- sample(nonrecession_unemployment_rates,size=16,replace=TRUE)
hist(recession_unemployment_rates, probability = TRUE, col="lightblue", main="Histogram of monthly unemployment rates during recessions")
curve(dnorm(x,mean=rur,sd=rsd),add=TRUE, col="red")
abline(v=rur, col="red")
abline(v=rur-1.96*rsd/sqrt(16), col="red")
abline(v=rur+1.96*rsd/sqrt(16), col="red")
hist(nonrecession_unemployment_rates, probability = TRUE, col="lightblue", main="Histogram of monthly unemployment rates outside of recessions")
curve(dnorm(x,mean=nur,sd=nsd),add=TRUE, col="red")
abline(v=nur, col="red")
abline(v=nur-1.96*nsd/sqrt(16), col="red")
abline(v=nur+1.96*nsd/sqrt(16), col="red")
t.test(recession_samples,nonrecession_samples,alternative="two.sided")
# Stepwise regression:
library(MASS)
library(car)
# Let's see if we can make a model that predicts unemployment from the other variables.
unemployment_reg <- lm(Unemployment ~ ., data=price_changes[,2:13])
vif(unemployment_reg)
summary(unemployment_reg)
stepAIC(unemployment_reg)
# Let's try again, but to predict recessions:
recession_reg <- lm(recession_bool ~ ., data=price_changes[,2:13])
vif(recession_reg)
summary(recession_reg)
recession_reg <- glm(recession_bool ~ ., data=price_changes[,2:13])
stepAIC(recession_reg)
# Vector autoregression:
library(vars)
# This lets us model future values of the target variable using past
# as well as present values of the predictors.
var_aic <- VAR(price_changes[,2:13], type = "none", lag.max = 5, ic = "AIC")
summary(var_aic)
# Trying to predict recessions from price history of all our goods is futile.
# Trying to predict recessions from price history of all our goods is futile.
# None of the variables, nor their histories, are significant contributors to
# Trying to predict recessions from price history of all our goods is futile.
# None of the variables, nor their histories, are significant contributors to
# the likelihood of recession in the next month, except for whether there was a
# Sources used:
# Sources used:
# https://www.rdocumentation.org/packages/vars/versions/1.5-3/topics/VAR
# Sources used:
# https://www.rdocumentation.org/packages/vars/versions/1.5-3/topics/VAR
# https://www.r-econometrics.com/timeseries/varintro/
knitr::opts_chunk$set(echo = TRUE)
library(eeptools) # to import the decomma() function
library(boot)
library(caret)
library(psych)
library(ggplot2)
chiSqTest <- function(x, nbins = 10) {
# Create standard normal bins based off quantiles of 10%
bins <- qnorm(1/nbins * (0:nbins), 0, 1);
# Sort the observed values (from vector x) into the appropriate bins
bincode <- cut(x, bins, labels = FALSE);
#Now get the frequency of values in the normal bins
observed <- table(bincode);
# Get the expected values from these bin sorts
# There should be the same number of values (observations)
expected <- length(x) / nbins;
# Compute Chi-square statistic.
chisq <- sum((observed - expected)^2 / expected);
# p-value of Chi-square statistic
pval <- pchisq(chisq, df = nbins - 2, lower.tail = FALSE);
print("Chi-sq test statistic:")
print(paste(chisq))
print("p-value with df = {nbins - 2}:")
print(paste(pval))
}
