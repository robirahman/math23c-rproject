library(car)
attach(Boston)
value_vs_status <- lm(medv ~ lstat)
outlierTest(value_vs_status)
qqPlot(value_vs_status)
leveragePlots(value_vs_status)
plot(value_vs_status)
detach(Boston)
attach(Boston)
value_vs_status <- lm(medv ~ lstat + lstat^2)
plot(value_vs_status)
detach(Boston)
attach(Boston)
value_vs_status <- lm(medv ~ lstat + lstat^2)
plot(value_vs_status)
detach(Boston)
attach(Boston)
value_vs_status <- lm(medv ~ lstat)
plot(value_vs_status)
detach(Boston)
attach(Boston)
plot(medv ~ lstat + lstat^2)
detach(Boston)
attach(Boston)
value_vs_status_squared <- lm(medv ~ lstat + lstat^2)
summary(value_vs_status_squared)
plot(medv ~ lstat + lstat^2)
detach(Boston)
attach(Boston)
value_vs_status_squared <- lm(medv ~ lstat + lstat^2)
summary(value_vs_status_squared)
plot(medv ~ lstat + I(lstat^2))
detach(Boston)
attach(Boston)
value_vs_status_squared <- lm(medv ~ lstat + I(lstat^2))
summary(value_vs_status_squared)
plot(medv ~ lstat + I(lstat^2))
detach(Boston)
value_vs_status_squared.out2
attach(Boston)
value_vs_status_squared <- lm(medv ~ lstat + I(lstat^2))
summary(value_vs_status_squared)
plot(medv ~ lstat + I(lstat^2))
curve(predict(value_vs_status_squared,newdata=data.frame(Boston$lstat=x)),add=T)
attach(Boston)
value_vs_status_squared <- lm(medv ~ lstat + I(lstat^2))
summary(value_vs_status_squared)
plot(medv ~ lstat + I(lstat^2))
curve(predict(value_vs_status_squared,newdata=data.frame(Boston$lstat)),add=T)
attach(Boston)
value_vs_status_squared <- lm(medv ~ lstat + I(lstat^2))
summary(value_vs_status_squared)
plot(medv ~ lstat + I(lstat^2))
curve(predict(value_vs_status_squared,newdata=data.frame(lstat=x)),add=T)
detach(Boston)
attach(Boston)
value_vs_status_squared <- lm(medv ~ lstat + I(lstat^2))
summary(value_vs_status_squared)
plot(medv ~ lstat + I(lstat^2))
detach(Boston)
attach(Boston)
value_vs_status_squared <- lm(medv ~ lstat + I(lstat^2))
summary(value_vs_status_squared)
plot(medv ~ (lstat + I(lstat^2)))
detach(Boston)
attach(Boston)
value_vs_status_squared <- lm(medv ~ lstat + I(lstat^2))
summary(value_vs_status_squared)
plot(medv ~ lstat + I(lstat^2))
detach(Boston)
attach(Boston)
value_vs_status_squared <- lm(medv ~ lstat + I(log(lstat)))
summary(value_vs_status_squared)
plot(medv ~ lstat + I(lstat^2))
detach(Boston)
attach(Boston)
value_vs_status_squared <- lm(medv ~ lstat + I(log(lstat)))
summary(value_vs_status_squared)
plot(medv ~ lstat + I(log(lstat)))
detach(Boston)
attach(Boston)
value_vs_status_squared <- lm(medv ~ lstat + I(lstat^2))
summary(value_vs_status_squared)
plot(medv ~ lstat + I(lstat^2))
detach(Boston)
attach(Boston)
value_vs_log_status <- lm(medv ~ I(log(lstat)))
summary(value_vs_log_status)
plot(medv ~ I(log(lstat)))
plot(value_vs_log_status)
detach(Boston)
attach(Boston)
value_vs_log_status <- lm(medv ~ lstat + I(log(lstat)))
summary(value_vs_log_status)
plot(medv ~ lstat + I(log(lstat)))
plot(value_vs_log_status)
detach(Boston)
attach(Boston)
value_vs_log_status <- lm(medv ~ I(log(lstat)))
summary(value_vs_log_status)
plot(medv ~ I(log(lstat)))
plot(value_vs_log_status)
detach(Boston)
hr_data <- data.frame()
hr_data <- edit(hr_data())
hr_data <- data.frame()
hr_data <- edit(hr_data)
hr_data <- data.frame()
hr_data <- edit(hr_data)
hr_data <- data.frame(
age=c(18,23,25,35,65,54,34,56,72,19,23,42,18,39,37),
hr=c(202,186,187,180,156,169,174,172,153,199,193,174,198,183,178)
)
hr_data <- data.frame(
age=c(18,23,25,35,65,54,34,56,72,19,23,42,18,39,37),
hr=c(202,186,187,180,156,169,174,172,153,199,193,174,198,183,178)
)
attach(hr_data)
hr_vs_age <- lm(hr, age)
View(hr_data)
View(hr_data)
hr_data <- data.frame(
age=c(18,23,25,35,65,54,34,56,72,19,23,42,18,39,37),
hr=c(202,186,187,180,156,169,174,172,153,199,193,174,198,183,178)
)
attach(hr_data)
hr_vs_age <- lm(hr ~ age)
summary(hr_vs_age)
plot(hr_vs_age)
detach(hr_data)
hr_data <- data.frame(
age=c(18,23,25,35,65,54,34,56,72,19,23,42,18,39,37),
hr=c(202,186,187,180,156,169,174,172,153,199,193,174,198,183,178)
)
attach(hr_data)
hr_vs_age <- lm(hr ~ age)
summary(hr_vs_age)
plot(hr, age)
plot(hr_vs_age)
detach(hr_data)
hr_data <- data.frame(
age=c(18,23,25,35,65,54,34,56,72,19,23,42,18,39,37),
hr=c(202,186,187,180,156,169,174,172,153,199,193,174,198,183,178)
)
attach(hr_data)
hr_vs_age <- lm(hr ~ age)
summary(hr_vs_age)
plot(hr, age)
abline(hr_vs_age)
plot(hr_vs_age)
detach(hr_data)
hr_data <- data.frame(
age=c(18,23,25,35,65,54,34,56,72,19,23,42,18,39,37),
hr=c(202,186,187,180,156,169,174,172,153,199,193,174,198,183,178)
)
attach(hr_data)
hr_vs_age <- lm(hr ~ age)
summary(hr_vs_age)
plot(hr, age)
plot(hr_vs_age)
detach(hr_data)
remove(list=ls())
hr_data <- data.frame(
age=c(18,23,25,35,65,54,34,56,72,19,23,42,18,39,37),
hr=c(202,186,187,180,156,169,174,172,153,199,193,174,198,183,178)
)
attach(hr_data)
hr_vs_age <- lm(hr ~ age)
summary(hr_vs_age)
plot(hr, age)
plot(hr_vs_age)
detach(hr_data)
bac_data <- data.frame(
beers=c(5,2,9,8,3,7,3,5,3,5),
bac=c(0.10,0.03,0.19,0.12,0.04,0.095,0.07,0.06,0.02,0.05)
)
attach(bac_data)
bac_vs_beers <- lm(beers ~ bac)
summary(bac_vs_beers)
plot(bac, beers)
plot(bac_vs_beers)
detach(bac_data)
pop_data <- data.frame(
year=c(1952,1955,1958,1961,1953,1956,1959),
seals=c(724,1392,1212,1980,176,1392,1672)
)
attach(pop_data)
seals_vs_year <- lm(seals ~ year)
summary(seals_vs_year)
plot(seals, year)
plot(seals_vs_year)
detach(pop_data)
bac_data <- data.frame(
beers=c(5,2,9,8,3,7,3,5,3,5),
bac=c(0.10,0.03,0.19,0.12,0.04,0.095,0.07,0.06,0.02,0.05)
)
attach(bac_data)
bac_vs_beers <- lm(bac ~ beers)
summary(bac_vs_beers)
plot(beers, bac, main="Blood alcohol content vs number of beers consumed")
plot(bac_vs_beers)
detach(bac_data)
pop_data <- data.frame(
year=c(1952,1955,1958,1961,1953,1956,1959),
seals=c(724,1392,1212,1980,176,1392,1672)
)
attach(pop_data)
seals_vs_year <- lm(seals ~ year)
summary(seals_vs_year)
plot(year, seals)
plot(seals_vs_year)
detach(pop_data)
pop_data <- data.frame(
year=c(1952,1955,1958,1961,1953,1956,1959),
seals=c(724,1392,1212,1980,176,1392,1672)
)
attach(pop_data)
seals_vs_year <- lm(seals ~ year)
summary(seals_vs_year)
plot(year, seals, main="Seal population by year")
plot(seals_vs_year)
future_years <- data.frame(lstat=c(1963,2014))
pred <- data.frame(
predict(seals_vs_year,
newdata = future_years,
interval = 'prediction'
)
)
detach(pop_data)
View(future_years)
View(future_years)
pop_data <- data.frame(
year=c(1952,1955,1958,1961,1953,1956,1959),
seals=c(724,1392,1212,1980,176,1392,1672)
)
attach(pop_data)
seals_vs_year <- lm(seals ~ year)
summary(seals_vs_year)
plot(year, seals, main="Seal population by year")
plot(seals_vs_year)
future_years <- data.frame(year=c(1963,2014))
pred <- data.frame(
predict(seals_vs_year,
newdata = future_years,
interval = 'prediction'
)
)
detach(pop_data)
View(pred)
View(pred)
pop_data <- data.frame(
year=c(1952,1955,1958,1961,1953,1956,1959),
seals=c(724,1392,1212,1980,176,1392,1672)
)
attach(pop_data)
seals_vs_year <- lm(seals ~ year)
summary(seals_vs_year)
plot(year, seals, main="Seal population by year")
plot(seals_vs_year)
future_years <- data.frame(year=c(1963,2014))
pred <- data.frame(
predict(seals_vs_year,
newdata = future_years,
interval = 'prediction'
)
); pred
detach(pop_data)
View(seals_vs_year)
View(seals_vs_year)
View(pop_data)
View(pop_data)
pop_data <- data.frame(
year=c(1952,1955,1958,1961,1953,1956,1959,1962,1954,1957,1960),
seals=c(724,1392,1212,1980,176,1392,1672,2116,920,1448,2068)
)
attach(pop_data)
seals_vs_year <- lm(seals ~ year)
summary(seals_vs_year)
plot(year, seals, main="Seal population by year")
plot(seals_vs_year)
future_years <- data.frame(year=c(1963,2014))
pred <- data.frame(
predict(seals_vs_year,
newdata = future_years,
interval = 'prediction'
)
); pred
detach(pop_data)
library(ISLR)
install.packages("ISLR")
library(ISLR)
Auto
linreg <- lm(mpg ~ horsepower, Auto)
linreg
linreg$coefficients
linreg$coefficients$(Intercept)
linreg$coefficients$[(Intercept)]
linreg$coefficients$[1]
linreg$coefficients[1]
linreg
plot(Auto$mpg, Auto$horsepower)
plot(Auto$mpg-39.9359, Auto$horsepower)
plot(Auto$mpg, Auto$horsepower)
plot(Auto$mpg, Auto$horsepower-39.9)
plot(Auto$mpg, Auto$horsepower)
resid(linreg)
plot(Auto$mpg, resid(linreg))
linreg
plot(Auto$mpg, Auto$horsepower)
-log(runif(1,0,1))/2
-log(runif(1,0,1))/2
-log(runif(1,0,1))/2
-log(runif(1,0,1))/2
-log(runif(1,0,1))/2
-log(runif(1,0,1))/2
mean(-log(runif(100,0,1)))
mean(-log(runif(100,0,1)))
mean(-log(runif(100,0,1)))
mean(-log(runif(100,0,1)))
mean(-log(runif(100,0,1)))
mean(-log(runif(100,0,1)))
mean(-log(runif(100,0,1)))
mean(-log(runif(100,0,1)))
mean(-log(runif(100,0,1)))
mean(-log(runif(100,0,1)))
mean(-log(runif(100,0,1)))
mean(-log(runif(100,0,1)))
mean(-log(runif(1000,0,1)))
mean(-log(runif(1000,0,1)))
mean(-log(runif(100000,0,1)))
mean(-log(runif(100000,0,1)))
mean(-log(runif(100000,0,1)))
mean(-log(runif(1000000,0,1)))
a1 <- c(2,1,0,1)
a2 <- c(1,1,3,2)
a3 <- c(2,0,2,1)
a4 <- c(1,0,4,2)
A <- rbind(a1,a2,a3,a4)
View(A)
View(A)
sum(dbinom(0:20,20,0.6))
sum(rbinom(0:20,20,0.6))
sum(pbinom(0:20,20,0.6, lower.tail = TRUE))
sum(pbinom(0:20,20,0.6, lower.tail = FALSE))
sum((0:20)*pbinom(0:20,20,0.6))
hist(rpois(10000,4), prob = TRUE)
hist(rpois(10000,4), prob = TRUE)
hist(dpois(x,4))
hist(dpois(x,4))
hist(dpois(1:15,4))
barplot(rpois(10000,4))
machine_regression <- lm(expense ~ usage, machine_data)
usage <- c(13,10,20,28,32,17,24,31,40,38)
expense <- c(17,22,30,37,47,30.5,32.5,39,51.5,40)
machine_data <- data.frame(usage=usage, expense=expense)
machine_regression <- lm(expense ~ usage, machine_data)
summary(machine_regression)
log_density <- log(oddbooks$density)
oddbooks$area <- oddbooks$height * oddbooks$breadth
library(DAAG)
oddbooks$area <- oddbooks$height * oddbooks$breadth
oddbooks$volume <- oddbooks$thick * oddbooks$area
oddbooks$density <- oddbooks$weight / oddbooks$volume
log_weight <- log(oddbooks$weight)
log_volume <- log(oddbooks$volume)
plot(log_volume, log_weight)
weight_vs_volume <- lm(log(weight) ~ log(volume), oddbooks)
abline(a=-8.942, b=1.696)
summary(weight_vs_volume)
log_weight <- log(oddbooks$weight)
log_area <- log(oddbooks$area)
plot(log_area, log_weight)
weight_vs_area <- lm(log(weight) ~ log(area), oddbooks)
abline(a=1.697, b=0.793)
summary(weight_vs_area)
log_density <- log(oddbooks$density)
log_volume <- log(oddbooks$volume)
plot(log_volume, log_density)
density_vs_volume <- lm(log(density) ~ log(volume), oddbooks)
abline(a=-8.942, b=1.696) # edit this
summary(density_vs_volume)
log_area <- log(oddbooks$area)
plot(log_area, log_density)
density_vs_area <- lm(log(density) ~ log(area), oddbooks)
abline(a=1.697, b=0.793) # edit this
summary(density_vs_area)
log_density <- log(oddbooks$density)
log_volume <- log(oddbooks$volume)
plot(log_volume, log_density)
density_vs_volume <- lm(log(density) ~ log(volume), oddbooks)
abline(a=-8.942, b=0.696)
summary(density_vs_volume)
log_area <- log(oddbooks$area)
plot(log_area, log_density)
density_vs_area <- lm(log(density) ~ log(area), oddbooks)
abline(a=-5.109, b=0.419)
summary(density_vs_area)
heights <- c(68,64,62,65,66)
weights <- c(132,108,102,115,128)
swimmers <- data.frame(heights=heights, weights=weights)
plot(swimmers)
abline(a=-240.5, b=5.5)
swim_regression <- lm(weights ~ heights, swimmers)
summary(swim_regression)
plot(swim_regression)
oddbooks$area <- oddbooks$height * oddbooks$breadth
oddbooks$volume <- oddbooks$thick * oddbooks$area
oddbooks$density <- oddbooks$weight / oddbooks$volume
log_weight <- log(oddbooks$weight)
log_volume <- log(oddbooks$volume)
plot(log_volume, log_weight)
weight_vs_volume <- lm(log(weight) ~ log(volume), oddbooks)
abline(a=-8.942, b=1.696)
summary(weight_vs_volume)
log_weight <- log(oddbooks$weight)
log_area <- log(oddbooks$area)
plot(log_area, log_weight, main="log(weight) vs log(area)")
weight_vs_area <- lm(log(weight) ~ log(area), oddbooks)
abline(a=1.697, b=0.793)
summary(weight_vs_area)
det(cbind(c(1,-1,-1,-1),c(-1,1,-1,-1),c(-1,-1,1,-1),c(-1,-1,-1,1)))
# This script shows the distributions of month-over-month price changes of our commodities.
library(eeptools) # to import the decomma() function
commodity_prices <- read.csv("source_data/commodities data.csv")
recession_dates <- read.csv("source_data/monthly recession indicator.csv")
recession_dates <- recession_dates[c(-242),] # Removed the entry for March 2021 so that the datasets have congruent date ranges.
commodity_prices[,9] <- decomma(commodity_prices[,9]) # Remove commas from the price of gold column.
goods <- c("Month","Crude_oil", "Sugar", "Soybeans", "Wheat", "Beef", "Rubber", "Cocoa_beans", "Gold", "USD_EUR", "Ice_cream", "Unemployment")
names(commodity_prices) <- goods
# Adding a column to distinguish the three different recessions in our date range.
recession_dates$which_recession <- recession_dates$USREC
recession_dates[84:101,3] <- 2*recession_dates[84:101,3]
recession_dates[230:241,3] <- 3*recession_dates[230:241,3]
setwd("~/GitHub/math23c-rproject")
commodity_prices <- read.csv("source_data/commodities data.csv")
recession_dates <- read.csv("source_data/monthly recession indicator.csv")
recession_dates <- recession_dates[c(-242),] # Removed the entry for March 2021 so that the datasets have congruent date ranges.
commodity_prices[,9] <- decomma(commodity_prices[,9]) # Remove commas from the price of gold column.
goods <- c("Month","Crude_oil", "Sugar", "Soybeans", "Wheat", "Beef", "Rubber", "Cocoa_beans", "Gold", "USD_EUR", "Ice_cream", "Unemployment")
names(commodity_prices) <- goods
# Adding a column to distinguish the three different recessions in our date range.
recession_dates$which_recession <- recession_dates$USREC
recession_dates[84:101,3] <- 2*recession_dates[84:101,3]
recession_dates[230:241,3] <- 3*recession_dates[230:241,3]
# Find month-over-month price changes for each commodity
price_changes <- commodity_prices
for (c in 2:11) {
for (r in 2:241) {
price_changes[r,c] <- commodity_prices[r,c] / commodity_prices[r-1,c] - 1
}
}
price_changes$recession_bool <- recession_dates$USREC
price_changes$which_recession <- recession_dates$which_recession
price_changes <- price_changes[c(-1),]
View(commodity_prices)
View(commodity_prices)
View(recession_dates)
View(recession_dates)
# Display a histogram of the price changes
for (i in 2:11) {
name <- goods[i]
hist(price_changes[,i], main=name)
}
for (c in 2:11) {
for (r in 2:241) {
price_changes[r,c] <- commodity_prices[r,c] - commodity_prices[r-1,c] - 1
}
}
price_changes <- commodity_prices
for (c in 2:11) {
for (r in 2:241) {
price_changes[r,c] <- commodity_prices[r,c] - commodity_prices[r-1,c] - 1
}
}
price_changes$recession_bool <- recession_dates$USREC
price_changes$which_recession <- recession_dates$which_recession
price_changes <- price_changes[c(-1),]
write.csv(price_changes, "output_files/price changes.csv")
# Display a histogram of the price changes
for (i in 2:11) {
name <- goods[i]
hist(price_changes[,i], main=name)
}
price_changes <- commodity_prices
for (c in 2:11) {
for (r in 2:241) {
price_changes[r,c] <- commodity_prices[r,c] / commodity_prices[r-1,c] - 1
}
}
price_changes$recession_bool <- recession_dates$USREC
price_changes$which_recession <- recession_dates$which_recession
price_changes <- price_changes[c(-1),]
write.csv(price_changes, "output_files/price changes.csv")
# Display a histogram of the price changes
for (i in 2:11) {
name <- goods[i]
hist(price_changes[,i], main=name)
}
# Repeating that, but during recessions only
for (i in 2:11) {
name <- paste(goods[i],"(recession)")
values <- price_changes[,c(i,13)]
values <- values[values[,2] == 1,]
hist(values[,1], main=name)
}
# Repeat for months not in recession
for (i in 2:11) {
name <- paste(goods[i],"(non-recession)")
values <- price_changes[,c(i,13)]
values <- values[values[,2] == 0,]
hist(values[,1], main=name)
}
