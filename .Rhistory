cases_data[16,] <- c(2021,4)
deaths_data <- unemployment_data[,1:2]
deaths_data[16,] <- c(2021,4)
# Fill in the monthly COVID case and deaths dataframes:
for (s in 1:60) {
cases_data[s+2] <- rep(0,16)
colnames(cases_data)[s+2] <- covid_data$state[1+16*(s-1)]
deaths_data[s+2] <- rep(0,16)
colnames(deaths_data)[s+2] <- covid_data$state[1+16*(s-1)]
for (m in 1:16) {
cases_data[m,s+2] <- covid_data[1+16*(s-1)+m,4]
deaths_data[m,s+2] <- covid_data[1+16*(s-1)+m,5]
}
}
cases_data <- cases_data[c(-16),c(-6,-14,-16,-31,-47,-48,-50,-57)]
deaths_data <- deaths_data[c(-16),c(-6,-14,-16,-31,-47,-48,-50,-57)]
unemployment_data <- unemployment_data[,c(-8)]
colnames(unemployment_data) <- c(
"Year","Month","AL","AK","AZ","AR","CA","CO","CT","DE","DC","FL","GA","HI",
"ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT",
"NE","NV","NH","NJ","NM","NY","NYC","NC","ND","OH","OK","OR","PA","RI","SC",
"SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"
)
unemployment_data <- unemployment_data[,
c(1,2,4,3,6,5,7:9,11,10,12:14,18,15:17,
19:21,24,23,22,25:26,28,27,29,37:38,
30,32,33:34,31,35,36,39:48,
50,49,51,53,52,54)
]
unemployment_changes <- unemployment_data
unemployment_changes[1:14,3:54] <- unemployment_changes[2:15,3:54] - unemployment_changes[1:14,3:54]
unemployment_changes <- unemployment_changes[c(-15),]
# for (i in 1:52) {
#   cases <- cases_data[1:14,i+2]
#   deaths <- deaths_data[1:14,i+2]
#   unemp_chg <- unemployment_changes[,i+2]
#   cases_vs_unemp <- lm(unemp_chg ~ cases)
#   deaths_vs_unemp <- lm(unemp_chg ~ deaths)
#   plot(cases,unemp_chg, main=paste(colnames(unemployment_changes)[i+2],"unemployment change vs cases"))
#   abline(cases_vs_unemp$coefficients[[1]],cases_vs_unemp$coefficients[[2]])
#   plot(deaths, unemp_chg, main=paste(colnames(unemployment_changes)[i+2],"unemployment change vs deaths"))
#   abline(deaths_vs_unemp$coefficients[[1]],deaths_vs_unemp$coefficients[[2]])
# }
cases <- numeric(14*52)
deaths <- numeric(14*52)
unemp <- numeric(14*52)
for (m in 1:14) {
for (s in 1:52) {
cases[s+52*(m-1)] <- cases_data[m,s+2]
deaths[s+52*(m-1)] <- deaths_data[m,s+2]
unemp[s+52*(m-1)] <- unemployment_changes[m,s+2]
}
}
# cases_vs_unemp <- lm(unemp ~ cases)
# summary(cases_vs_unemp)
# deaths_vs_unemp <- lm(unemp ~ deaths)
# summary(deaths_vs_unemp)
both_vs_unemp <- lm(unemp ~ cases + deaths)
summary(both_vs_unemp)
state_pops <- read.csv("output/State populations 2020.csv")[,-1]
# Delete New York City because it's not in the state population list
cases_per_capita <- cases_data[,-38]
deaths_per_capita <- deaths_data[,-38]
for (m in 1:15) {
for (s in 1:51) {
# divide cases_data and deaths_data columns by the pop of that state
cases_per_capita[m,s+2] <- cases_per_capita[m,s+2]/as.numeric(state_pops[2,s])
deaths_per_capita[m,s+2] <- deaths_per_capita[m,s+2]/as.numeric(state_pops[2,s])
}
}
cases <- numeric(14*51)
deaths <- numeric(14*51)
unemp <- numeric(14*51)
for (m in 1:14) {
for (s in 1:51) {
cases[s+51*(m-1)] <- cases_per_capita[m,s+2]
deaths[s+51*(m-1)] <- deaths_per_capita[m,s+2]
unemp[s+51*(m-1)] <- unemployment_changes[m,s+2]
}
}
# cases_vs_unemp <- lm(unemp ~ cases)
# summary(cases_vs_unemp)
# deaths_vs_unemp <- lm(unemp ~ deaths)
# summary(deaths_vs_unemp)
both_vs_unemp <- lm(unemp ~ cases + deaths)
summary(both_vs_unemp)
plot(both_vs_unemp)
library(DAAG)
library(party)
library(rpart)
library(rpart.plot)
library(mlbench)
library(pROC)
library(tree)
install.packages("rpart.plot"); install.packages("mlbench"); install.packages("tree")
library(mlbench)
library(caret)
library(lime)
library(e1071)
install.packages("lime")
library(dplyr)
library(ggplot2)
library(lubridate)
library(quantmod)
library(xts)
library(PerformanceAnalytics)
install.packages("quantmod")
library(dplyr)
library(ggplot2)
library(lubridate)
library(quantmod)
library(xts)
library(PerformanceAnalytics)
install.packages("PerformanceAnalytics")
library(dplyr)
library(ggplot2)
library(lubridate)
library(quantmod)
library(xts)
library(PerformanceAnalytics)
knitr::opts_chunk$set(echo = TRUE)
library(eeptools) # to import the decomma() function
library(boot)
library(caret)
commodity_prices <- read.csv("source_data/commodities data.csv")
recession_dates <- read.csv("source_data/monthly recession indicator.csv")
recession_dates <- recession_dates[c(-242),] # Removed the entry for March 2021 so that the datasets have congruent date ranges.
commodity_prices[,9] <- decomma(commodity_prices[,9]) # Remove commas from the price of gold column.
goods <- c("Month","Crude_oil", "Sugar", "Soybeans", "Wheat", "Beef", "Rubber", "Cocoa_beans", "Gold", "USD_EUR", "Ice_cream", "Unemployment")
names(commodity_prices) <- goods
# Adding a column to distinguish the three different recessions in our date range.
recession_dates$which_recession <- recession_dates$USREC
recession_dates[84:101,3] <- 2*recession_dates[84:101,3]
recession_dates[230:241,3] <- 3*recession_dates[230:241,3]
# Find month-over-month price changes for each commodity
price_changes <- commodity_prices
for (c in 2:11) {
for (r in 2:241) {
price_changes[r,c] <- commodity_prices[r,c] / commodity_prices[r-1,c] - 1
}
}
price_changes$recession_bool <- recession_dates$USREC
price_changes$which_recession <- recession_dates$which_recession
price_changes <- price_changes[c(-1),]
# Display a histogram of the price changes
for (i in 2:11) {
name <- goods[i]
hist(price_changes[,i], main=name)
}
# Repeating that, but during recessions only
for (i in 2:11) {
name <- paste(goods[i],"(recession)")
values <- price_changes[,c(i,13)]
values <- values[values[,2] == 1,]
hist(values[,1], main=name)
}
# Repeat for months not in recession
for (i in 2:11) {
name <- paste(goods[i],"(non-recession)")
values <- price_changes[,c(i,13)]
values <- values[values[,2] == 0,]
hist(values[,1], main=name)
}
soybeans_regression <- glm(recession_bool ~ Soybeans, data = price_changes, family = 'binomial')
summary(soybeans_regression)
plot(price_changes$Soybeans, price_changes$recession_bool)
gold_regression <- glm(recession_bool ~ Gold, data = price_changes, family = 'binomial')
summary(gold_regression)
plot(price_changes$Gold, price_changes$recession_bool)
goods_vs_recession_logistic_model <- glm(
recession_bool ~ Crude_oil + Sugar + Soybeans + Wheat + Beef + Rubber + Cocoa_beans + Gold + USD_EUR + Ice_cream,
data = price_changes, family = 'binomial')
summary(goods_vs_recession_logistic_model)
negative_goods_regression <- glm(recession_bool ~ Crude_oil + Wheat + Rubber + Ice_cream, data = price_changes, family = 'binomial')
summary(negative_goods_regression)
# Probability of a recession if all of these goods lost 100% of their value this month:
inv.logit(-1.6582+0.2640+0.7643+0.8586+1.5616)
# Probability of a recession if all of these goods doubled in price last month:
inv.logit(-1.6582-0.2640-0.7643-0.8586-1.5616)
icecream_regression <- glm(recession_bool ~ Ice_cream, data = price_changes, family = 'binomial')
summary(icecream_regression)
plot(price_changes$Ice_cream, price_changes$recession_bool)
curve(inv.logit(-1.5900*x-1.6687), add=TRUE)
icecream_predictions <- as.factor(predict(icecream_regression, newdata=price_changes, type='response') > inv.logit(-1.6687))
confusionMatrix(icecream_predictions, reference = as.factor(price_changes$recession_bool==1))
recession_predictions <- as.factor(predict(goods_vs_recession_logistic_model, newdata=price_changes, type='response') > inv.logit(-1.7006))
confusionMatrix(recession_predictions, reference = as.factor(price_changes$recession_bool==1))
View(commodity_prices)
View(price_changes)
View(price_changes)
View(price_changes)
knitr::opts_chunk$set(echo = TRUE)
library(eeptools) # to import the decomma() function
library(boot)
library(caret)
library(psych)
pairs.panels(price_changes[,2:13])
pairs.panels(price_changes[,2:13])
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (r in 2:241) {
for (c in 2:11) {
change_vs_recession$change[r-1+240*(c-1)] <- price_changes[r,c]
}
}
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (r in 2:241) {
for (c in 2:11) {
change_vs_recession$change[r+240*(c-1)] <- price_changes[r,c]
}
}
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2402),recession_bool=rep(price_changes$recession_bool,10))
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (r in 2:241) {
for (c in 2:11) {
change_vs_recession$change[r+240*(c-1)] <- price_changes[r,c]
}
}
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (r in 2:241) {
for (c in 2:11) {
change_vs_recession[r+240*(c-1),1] <- price_changes[r,c]
}
}
# price_changes_in_recession <- c()
# price_changes_no_recession <- c()
View(change_vs_recession)
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (r in 2:241) {
for (c in 2:11) {
change_vs_recession[r+240*(c-2),1] <- price_changes[r,c]
}
}
# price_changes_in_recession <- c()
# price_changes_no_recession <- c()
View(change_vs_recession)
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (r in 2:241) {
for (c in 2:11) {
change_vs_recession[r-1+240*(c-2),1] <- price_changes[r,c]
}
}
# price_changes_in_recession <- c()
# price_changes_no_recession <- c()
View(change_vs_recession)
View(price_changes)
View(price_changes)
View(price_changes)
View(change_vs_recession)
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (c in 2:11) {
for (r in 2:241) {
change_vs_recession[r-1+240*(c-2),1] <- price_changes[r,c]
}
}
# price_changes_in_recession <- c()
# price_changes_no_recession <- c()
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (c in 2:11) {
for (r in 2:241) {
change_vs_recession[r-1+240*(c-2),1] <- price_changes[r-1,c]
}
}
# price_changes_in_recession <- c()
# price_changes_no_recession <- c()
table(change_vs_recession)
table(change_vs_recession$change >= 0, change_vs_recession$recession_bool)
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (c in 2:11) {
for (r in 2:241) {
change_vs_recession[r-1+240*(c-2),1] <- price_changes[r-1,c]
}
}
hist(change_vs_recession$change)
table(change_vs_recession$change >= 0, change_vs_recession$recession_bool)
# price_changes_in_recession <- c()
# price_changes_no_recession <- c()
212/(212+168)
1130/(1130+890)
212/(212+168)
1130/(1130+890)
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (c in 2:11) {
for (r in 2:241) {
change_vs_recession[r-1+240*(c-2),1] <- price_changes[r-1,c]
}
}
hist(change_vs_recession$change)
table(change_vs_recession$change >= 0, change_vs_recession$recession_bool)
# During recessions: price diff >= 0 212 times; price diff < 0 168 times
# During other times: price diff >= 0 1130 times; price diff < 0 890 times
212/(212+168)
1130/(1130+890)
# price_changes_in_recession <- c()
# price_changes_no_recession <- c()
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (c in 2:11) {
for (r in 2:241) {
change_vs_recession[r-1+240*(c-2),1] <- price_changes[r-1,c]
}
}
hist(change_vs_recession$change)
table(change_vs_recession$change >= 0, change_vs_recession$recession_bool)
# During recessions: price diff >= 0 212 times; price diff < 0 168 times
# During other times: price diff >= 0 1130 times; price diff < 0 890 times
212/(212+168) # Price goes up 55.8% of the time during recessions
1130/(1130+890) # Price goes up 55.9% of the time without recession
# price_changes_in_recession <- c()
# price_changes_no_recession <- c()
knitr::opts_chunk$set(echo = TRUE)
library(eeptools) # to import the decomma() function
library(boot)
library(caret)
library(psych)
commodity_prices <- read.csv("source_data/commodities data.csv")
recession_dates <- read.csv("source_data/monthly recession indicator.csv")
recession_dates <- recession_dates[c(-242),] # Removed the entry for March 2021 so that the datasets have congruent date ranges.
commodity_prices[,9] <- decomma(commodity_prices[,9]) # Remove commas from the price of gold column.
goods <- c("Month","Crude_oil", "Sugar", "Soybeans", "Wheat", "Beef", "Rubber", "Cocoa_beans", "Gold", "USD_EUR", "Ice_cream", "Unemployment")
names(commodity_prices) <- goods
# Adding a column to distinguish the three different recessions in our date range.
recession_dates$which_recession <- recession_dates$USREC
recession_dates[84:101,3] <- 2*recession_dates[84:101,3]
recession_dates[230:241,3] <- 3*recession_dates[230:241,3]
# Find month-over-month price changes for each commodity
price_changes <- commodity_prices
for (c in 2:11) {
for (r in 2:241) {
price_changes[r,c] <- commodity_prices[r,c] / commodity_prices[r-1,c] - 1
}
}
price_changes$recession_bool <- recession_dates$USREC
price_changes$which_recession <- recession_dates$which_recession
price_changes <- price_changes[c(-1),]
# Display a histogram of the price changes
for (i in 2:11) {
name <- goods[i]
hist(price_changes[,i], main=name)
}
# Repeating that, but during recessions only
for (i in 2:11) {
name <- paste(goods[i],"(recession)")
values <- price_changes[,c(i,13)]
values <- values[values[,2] == 1,]
hist(values[,1], main=name)
}
# Repeat for months not in recession
for (i in 2:11) {
name <- paste(goods[i],"(non-recession)")
values <- price_changes[,c(i,13)]
values <- values[values[,2] == 0,]
hist(values[,1], main=name)
}
commodity_prices <- read.csv("source_data/commodities data.csv")
recession_dates <- read.csv("source_data/monthly recession indicator.csv")
recession_dates <- recession_dates[c(-242),] # Removed the entry for March 2021 so that the datasets have congruent date ranges.
commodity_prices[,9] <- decomma(commodity_prices[,9]) # Remove commas from the price of gold column.
goods <- c("Month","Crude_oil", "Sugar", "Soybeans", "Wheat", "Beef", "Rubber", "Cocoa_beans", "Gold", "USD_EUR", "Ice_cream", "Unemployment")
names(commodity_prices) <- goods
# Adding a column to distinguish the three different recessions in our date range.
recession_dates$which_recession <- recession_dates$USREC
recession_dates[84:101,3] <- 2*recession_dates[84:101,3]
recession_dates[230:241,3] <- 3*recession_dates[230:241,3]
# Find month-over-month price changes for each commodity
price_changes <- commodity_prices
for (c in 2:11) {
for (r in 2:241) {
price_changes[r,c] <- commodity_prices[r,c] / commodity_prices[r-1,c] - 1
}
}
price_changes$recession_bool <- recession_dates$USREC
price_changes$which_recession <- recession_dates$which_recession
price_changes <- price_changes[c(-1),]
# Display a histogram of the price changes
for (i in 2:11) {
name <- goods[i]
hist(price_changes[,i], main=name)
}
# Repeating that, but during recessions only
for (i in 2:11) {
name <- paste(goods[i],"(recession)")
values <- price_changes[,c(i,13)]
values <- values[values[,2] == 1,]
hist(values[,1], main=name)
}
# Repeat for months not in recession
for (i in 2:11) {
name <- paste(goods[i],"(non-recession)")
values <- price_changes[,c(i,13)]
values <- values[values[,2] == 0,]
hist(values[,1], main=name)
}
soybeans_regression <- glm(recession_bool ~ Soybeans, data = price_changes, family = 'binomial')
summary(soybeans_regression)
plot(price_changes$Soybeans, price_changes$recession_bool)
gold_regression <- glm(recession_bool ~ Gold, data = price_changes, family = 'binomial')
summary(gold_regression)
plot(price_changes$Gold, price_changes$recession_bool)
goods_vs_recession_logistic_model <- glm(
recession_bool ~ Crude_oil + Sugar + Soybeans + Wheat + Beef + Rubber + Cocoa_beans + Gold + USD_EUR + Ice_cream,
data = price_changes, family = 'binomial')
summary(goods_vs_recession_logistic_model)
negative_goods_regression <- glm(recession_bool ~ Crude_oil + Wheat + Rubber + Ice_cream, data = price_changes, family = 'binomial')
summary(negative_goods_regression)
# Probability of a recession if all of these goods lost 100% of their value this month:
inv.logit(-1.6582+0.2640+0.7643+0.8586+1.5616)
# Probability of a recession if all of these goods doubled in price last month:
inv.logit(-1.6582-0.2640-0.7643-0.8586-1.5616)
icecream_regression <- glm(recession_bool ~ Ice_cream, data = price_changes, family = 'binomial')
summary(icecream_regression)
plot(price_changes$Ice_cream, price_changes$recession_bool)
curve(inv.logit(-1.5900*x-1.6687), add=TRUE)
icecream_predictions <- as.factor(predict(icecream_regression, newdata=price_changes, type='response') > inv.logit(-1.6687))
confusionMatrix(icecream_predictions, reference = as.factor(price_changes$recession_bool==1))
recession_predictions <- as.factor(predict(goods_vs_recession_logistic_model, newdata=price_changes, type='response') > inv.logit(-1.7006))
confusionMatrix(recession_predictions, reference = as.factor(price_changes$recession_bool==1))
soybeans_regression <- glm(recession_bool ~ Soybeans, data = price_changes, family = 'binomial')
summary(soybeans_regression)
plot(price_changes$Soybeans, price_changes$recession_bool)
gold_regression <- glm(recession_bool ~ Gold, data = price_changes, family = 'binomial')
summary(gold_regression)
plot(price_changes$Gold, price_changes$recession_bool)
goods_vs_recession_logistic_model <- glm(
recession_bool ~ Crude_oil + Sugar + Soybeans + Wheat + Beef + Rubber + Cocoa_beans + Gold + USD_EUR + Ice_cream,
data = price_changes, family = 'binomial')
summary(goods_vs_recession_logistic_model)
negative_goods_regression <- glm(recession_bool ~ Crude_oil + Wheat + Rubber + Ice_cream, data = price_changes, family = 'binomial')
summary(negative_goods_regression)
# Probability of a recession if all of these goods lost 100% of their value this month:
inv.logit(-1.6582+0.2640+0.7643+0.8586+1.5616)
# Probability of a recession if all of these goods doubled in price last month:
inv.logit(-1.6582-0.2640-0.7643-0.8586-1.5616)
icecream_regression <- glm(recession_bool ~ Ice_cream, data = price_changes, family = 'binomial')
summary(icecream_regression)
plot(price_changes$Ice_cream, price_changes$recession_bool)
curve(inv.logit(-1.5900*x-1.6687), add=TRUE)
icecream_predictions <- as.factor(predict(icecream_regression, newdata=price_changes, type='response') > inv.logit(-1.6687))
confusionMatrix(icecream_predictions, reference = as.factor(price_changes$recession_bool==1))
recession_predictions <- as.factor(predict(goods_vs_recession_logistic_model, newdata=price_changes, type='response') > inv.logit(-1.7006))
confusionMatrix(recession_predictions, reference = as.factor(price_changes$recession_bool==1))
goods_vs_recession_logistic_model <- glm(
recession_bool ~ Crude_oil + Sugar + Soybeans + Wheat + Beef + Rubber + Cocoa_beans + Gold + USD_EUR + Ice_cream,
data = price_changes, family = 'binomial')
summary(goods_vs_recession_logistic_model)
soybeans_regression <- glm(recession_bool ~ Soybeans, data = price_changes, family = 'binomial')
summary(soybeans_regression)
plot(price_changes$Soybeans, price_changes$recession_bool)
gold_regression <- glm(recession_bool ~ Gold, data = price_changes, family = 'binomial')
summary(gold_regression)
plot(price_changes$Gold, price_changes$recession_bool)
goods_vs_recession_logistic_model <- glm(
recession_bool ~ Crude_oil + Sugar + Soybeans + Wheat + Beef + Rubber + Cocoa_beans + Gold + USD_EUR + Ice_cream,
data = price_changes, family = 'binomial')
summary(goods_vs_recession_logistic_model)
negative_goods_regression <- glm(recession_bool ~ Crude_oil + Wheat + Rubber + Ice_cream, data = price_changes, family = 'binomial')
summary(negative_goods_regression)
# Probability of a recession if all of these goods lost 100% of their value this month:
inv.logit(-1.6582+0.2640+0.7643+0.8586+1.5616)
# Probability of a recession if all of these goods doubled in price last month:
inv.logit(-1.6582-0.2640-0.7643-0.8586-1.5616)
icecream_regression <- glm(recession_bool ~ Ice_cream, data = price_changes, family = 'binomial')
summary(icecream_regression)
plot(price_changes$Ice_cream, price_changes$recession_bool)
curve(inv.logit(-1.5900*x-1.6687), add=TRUE)
icecream_predictions <- as.factor(predict(icecream_regression, newdata=price_changes, type='response') > inv.logit(-1.6687))
confusionMatrix(icecream_predictions, reference = as.factor(price_changes$recession_bool==1))
recession_predictions <- as.factor(predict(goods_vs_recession_logistic_model, newdata=price_changes, type='response') > inv.logit(-1.7006))
confusionMatrix(recession_predictions, reference = as.factor(price_changes$recession_bool==1))
# unpack the dataframe price_changes into two columns
change_vs_recession <- data.frame(change=numeric(2400),recession_bool=rep(price_changes$recession_bool,10))
for (c in 2:11) {
for (r in 2:241) {
change_vs_recession[r-1+240*(c-2),1] <- price_changes[r-1,c]
}
}
hist(change_vs_recession$change)
table(change_vs_recession$change >= 0, change_vs_recession$recession_bool)
# During recessions: price diff >= 0 212 times; price diff < 0 168 times
# During other times: price diff >= 0 1130 times; price diff < 0 890 times
212/(212+168) # Price goes up 55.8% of the time during recessions
1130/(1130+890) # Price goes up 55.9% of the time without recession
# price_changes_in_recession <- c()
# price_changes_no_recession <- c()
pairs.panels(price_changes[,2:13])
pairs.panels(price_changes[,2:10])
pairs.panels(price_changes[,2:6])
pairs.panels(price_changes[,2:13])
price_changes <- read.csv("output_files/price changes.csv")
setwd("~/GitHub/math23c-rproject")
price_changes <- read.csv("output_files/price changes.csv")
View(price_changes)
price_changes <- read.csv("output_files/price changes.csv")[,2:15]
View(price_changes)
install.packages("vars")
library(vars)
View(price_changes)
var_aic <- VAR(price_changes[,2:12], type = "none", lag.max = 5, ic = "AIC")
summary(var_aic)
var_aic <- VAR(price_changes[,2:13], type = "none", lag.max = 5, ic = "AIC")
summary(var_aic)
View(var_aic)
